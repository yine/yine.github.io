<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用letsencrypt-certbot生成免费加密证书</title>
      <link href="/2020/05/07/%E4%BD%BF%E7%94%A8letsencrypt-certbot%E7%94%9F%E6%88%90%E5%85%8D%E8%B4%B9%E5%8A%A0%E5%AF%86%E8%AF%81%E4%B9%A6/"/>
      <url>/2020/05/07/%E4%BD%BF%E7%94%A8letsencrypt-certbot%E7%94%9F%E6%88%90%E5%85%8D%E8%B4%B9%E5%8A%A0%E5%AF%86%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><ul><li>证书可用在https,wss等需要tls加密认证的场景;</li><li>正式使用的环境一般都会使用收费的证书，但测试服或自己实验环境大部分都用自签名或免费的证书;</li><li>webrtc相关的模块标准要求必须加密且不能是自签名证书;</li></ul><h3 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h3><p>从背景上来看我们得想想办法来薅一薅羊毛了，但为了安全性也还是有一些准入门槛的，如下：</p><ul><li>得下载一份 certbot-auto 脚本;</li><li>得有服务器的登录ssh权限;</li><li>第一次安装时得有root权限可以将脚本加入sudo list；</li><li>服务器必须有可用的域名已经预先解析到了本机上且能ping通,地址为本服务器的公网地址;</li><li>服务器上的80或443端口是空闲的如果外围有防火墙需要在防火墙上开放了公网的相应端口;</li><li>脚本在执行时为了校验域名被解析的主机就是你所操作的主机所以会自动开启443端口进行现场认证, 防止绑定了非法域名,还有一个注意的点就是它只能提供具体域名无法对范域名进行绑定证书;</li></ul><h3 id="获取证书"><a href="#获取证书" class="headerlink" title="获取证书"></a>获取证书</h3><ol><li>先下载可执行脚本: 详见: &lt;wget <a href="https://dl.eff.org/certbot-auto&gt;" target="_blank" rel="noopener">https://dl.eff.org/certbot-auto&gt;</a> ;</li><li>放到自己的一个固定的目录如：<code>/home/yine/scripts</code>, 然后添加可执行权限: <code>chmod a+x /home/yine/scripts/certbot-auto</code>;</li><li><code>sudo -iu root</code> 切换到root权限添加脚本到sudo列表中去,以方便后续普通用户的证书自动更新操作；</li><li>添加sudo列表: <code>echo &#39;popo ALL = NOPASSWD: ...(其它已有指令), /home/yine/scripts/certbot-auto&#39; &gt; /etc/sudoers.d/yine</code>;</li><li><code>sudo -iu yine</code> 切换到普通用户;</li><li><code>sudo /home/yine/scripts/certbot-auto certonly --standalone -d yourdomain.com --agree-tos --email youremail@gmail.com</code>;</li><li>当执行成功后会在<code>/etc/letsencrypt</code>下生成相关临时文件和证书文件;</li><li><code>/etc/letsencrypt/live/yourdomain.com/fullchain.pem</code> 为证书文件;</li><li><code>/etc/letsencrypt/live/yourdomain.com/privkey.pem</code> 为证书的私钥;</li><li>为了应用能直接访问可以修改<code>/etc/letsencrypt</code>目录归属和权限 <code>chown -R yine:studio /etc/letsencrypt</code>  <code>chmod -R 744 /etc/letsencrypt</code>;</li></ol><h3 id="配置应用使用"><a href="#配置应用使用" class="headerlink" title="配置应用使用"></a>配置应用使用</h3><ol><li>nginx<figure class="hljs highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs json">  server &#123;<br>        listen 80;<br>        server_name abc.com;<br>        rewrite ^(.*) https://abc.com permanent;<br>&#125;<br>server&#123;<br>    listen 443 ssl default_server;<br>    listen [::]:443 ssl default_server;<br><br>    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;<br>    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;<br><br>    server_name www.yourdomain.com;<br>    root /web/yourdomain.com/;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>kamailio 在 /etc/kamailio/tls.cfg<figure class="hljs highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">private_key = /etc/letsencrypt/live/yourdomain.com/privkey.pem<br>certificate = /etc/letsencrypt/live/yourdomain.com/fullchain.pem<br></code></pre></td></tr></table></figure></li></ol><h3 id="配置自动更新"><a href="#配置自动更新" class="headerlink" title="配置自动更新"></a>配置自动更新</h3><ol><li>在 /home/yine/scripts 下新建脚本  corn-cerbot-auto.sh</li><li>添加: <figure class="hljs highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><br>sudo /home/popo/scripts/certbot-auto renew --quiet<br>sudo /etc/init.d/kamailio force-reload<br></code></pre></td></tr></table></figure></li><li>在计划任务中添加(crontab -e): <code>0 4 1 */2 * /home/yine/scripts/corn-cerbot-auto.sh</code>  #每两个月的一号凌晨4点更新一次</li></ol><h3 id="其它生成方式"><a href="#其它生成方式" class="headerlink" title="其它生成方式"></a>其它生成方式</h3><ul><li>还有其它的依赖web的生成方式,比如nginx或apache等,需要有这样的web应用在,直接使用认证文件的方式进行;</li><li>详见: <a href="https://letsencrypt.org/zh-cn/getting-started/#" target="_blank" rel="noopener">https://letsencrypt.org/zh-cn/getting-started/#</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FreeSWITCH mod_verto 信令样例</title>
      <link href="/2020/04/30/FreeSWITCH-mod-verto-%E4%BF%A1%E4%BB%A4%E6%A0%B7%E4%BE%8B/"/>
      <url>/2020/04/30/FreeSWITCH-mod-verto-%E4%BF%A1%E4%BB%A4%E6%A0%B7%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="FreeSWITCH-mod-verto-采用-json-rpc-信令格式"><a href="#FreeSWITCH-mod-verto-采用-json-rpc-信令格式" class="headerlink" title="FreeSWITCH mod_verto 采用 json-rpc 信令格式"></a>FreeSWITCH mod_verto 采用 json-rpc 信令格式</h3><h4 id="登录信令"><a href="#登录信令" class="headerlink" title="登录信令"></a>登录信令</h4><figure class="hljs highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">"jsonrpc"</span>: <span class="hljs-string">"2.0"</span>,<br>    <span class="hljs-attr">"method"</span>: <span class="hljs-string">"login"</span>,<br>    <span class="hljs-attr">"id"</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">"params"</span>: &#123;<br>        <span class="hljs-attr">"login"</span>: <span class="hljs-string">"1000@MY-IP-ADDRESS"</span>,<br>        <span class="hljs-attr">"loginParams"</span>: &#123;&#125;,<br>        <span class="hljs-attr">"userVariables"</span>: &#123;&#125;,<br>        <span class="hljs-attr">"passwd"</span>: <span class="hljs-string">"1234"</span>,<br>        <span class="hljs-attr">"sessid"</span>: <span class="hljs-string">"53FB0781-B586-4CDA-98C6-558680663B46"</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="登录信令响应"><a href="#登录信令响应" class="headerlink" title="登录信令响应"></a>登录信令响应</h4><figure class="hljs highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">"jsonrpc"</span>: <span class="hljs-string">"2.0"</span>,<br>    <span class="hljs-attr">"id"</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">"result"</span>: &#123;<br>        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"logged in"</span>,<br>        <span class="hljs-attr">"sessid"</span>: <span class="hljs-string">"53FB0781-B586-4CDA-98C6-558680663B46"</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h4 id="发起呼叫信令"><a href="#发起呼叫信令" class="headerlink" title="发起呼叫信令"></a>发起呼叫信令</h4><figure class="hljs highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">"jsonrpc"</span>: <span class="hljs-string">"2.0"</span>,<br>    <span class="hljs-attr">"method"</span>: <span class="hljs-string">"verto.invite"</span>,<br>    <span class="hljs-attr">"id"</span>: <span class="hljs-number">2</span>,<br>    <span class="hljs-attr">"params"</span>: &#123;<br>        <span class="hljs-attr">"dialogParams"</span>: &#123;<br>            <span class="hljs-attr">"remote_caller_id_number"</span>: <span class="hljs-string">"1008"</span>,<br>            <span class="hljs-attr">"useVideo"</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-attr">"useMic"</span>: <span class="hljs-string">"any"</span>,<br>            <span class="hljs-attr">"useStereo"</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-attr">"tag"</span>: <span class="hljs-string">"webcam"</span>,<br>            <span class="hljs-attr">"login"</span>: <span class="hljs-string">"1000@159.203.164.7"</span>,<br>            <span class="hljs-attr">"useCamera"</span>: <span class="hljs-string">"any"</span>,<br>            <span class="hljs-attr">"videoParams"</span>: &#123;<br>                <span class="hljs-attr">"minFrameRate"</span>: <span class="hljs-number">30</span>,<br>                <span class="hljs-attr">"minWidth"</span>: <span class="hljs-string">"1280"</span>,<br>                <span class="hljs-attr">"minHeight"</span>: <span class="hljs-string">"720"</span><br>            &#125;,<br>            <span class="hljs-attr">"destination_number"</span>: <span class="hljs-string">"1008"</span>,<br>            <span class="hljs-attr">"screenShare"</span>: <span class="hljs-literal">false</span>,<br>            <span class="hljs-attr">"caller_id_name"</span>: <span class="hljs-string">"FreeSWITCH User"</span>,<br>            <span class="hljs-attr">"caller_id_number"</span>: <span class="hljs-string">"1000"</span>,<br>            <span class="hljs-attr">"callID"</span>: <span class="hljs-string">"0CD433FC-A909-4DF2-BC46-0A4A94E9B800"</span>,<br>            <span class="hljs-attr">"remote_caller_id_name"</span>: <span class="hljs-string">"Outbound Call"</span>,<br>            <span class="hljs-attr">"useSpeak"</span>: <span class="hljs-string">"any"</span><br>        &#125;,<br>        <span class="hljs-attr">"sessid"</span>: <span class="hljs-string">"53FB0781-B586-4CDA-98C6-558680663B46"</span>,<br>        <span class="hljs-attr">"sdp"</span>: <span class="hljs-string">"v=0\r\n</span><br><span class="hljs-string">                o=- 8564086442942257834 2 IN IP4 127.0.0.1\r\n</span><br><span class="hljs-string">                s=-\r\n</span><br><span class="hljs-string">                t=0 0\r\n</span><br><span class="hljs-string">                a=group:BUNDLE audio video\r\n</span><br><span class="hljs-string">                a=msid-semantic: WMS\r\n</span><br><span class="hljs-string">                m=audio 58157 UDP\/TLS\/RTP\/SAVPF 111 103 104 9 102 0 8 106 105 13 127 126\r\n</span><br><span class="hljs-string">                c=IN IP4 82.166.93.197\r\n</span><br><span class="hljs-string">                a=rtcp:52576 IN IP4 82.166.93.197\r\n</span><br><span class="hljs-string">                a=candidate:3168280865 1 udp 2122260223 11.0.0.244 58157 typ host generation 0\r\n</span><br><span class="hljs-string">                a=candidate:1260196625 1 udp 2122194687 10.134.172.254 58951 typ host generation 0\r\n</span><br><span class="hljs-string">                a=candidate:3168280865 2 udp 2122260222 11.0.0.244 52576 typ host generation 0\r\n</span><br><span class="hljs-string">                a=candidate:1260196625 2 udp 2122194686 10.134.172.254 58945 typ host generation 0\r\n</span><br><span class="hljs-string">                a=candidate:4066106833 1 tcp 1518280447 11.0.0.244 60562 typ host tcptype passive generation 0\r\n</span><br><span class="hljs-string">                a=candidate:94302177 1 tcp 1518214911 10.134.172.254 60563 typ host tcptype passive generation 0\r\n</span><br><span class="hljs-string">                a=candidate:4066106833 2 tcp 1518280446 11.0.0.244 60564 typ host tcptype passive generation 0\r\n</span><br><span class="hljs-string">                a=candidate:94302177 2 tcp 1518214910 10.134.172.254 60565 typ host tcptype passive generation 0\r\n</span><br><span class="hljs-string">                a=candidate:1610196941 1 udp 1686052607 82.166.93.197 58157 typ srflx raddr 11.0.0.244 rport 58157 generation 0\r\n</span><br><span class="hljs-string">                a=candidate:1610196941 2 udp 1686052606 82.166.93.197 52576 typ srflx raddr 11.0.0.244 rport 52576 generation 0\r\n</span><br><span class="hljs-string">                a=candidate:2274372738 2 udp 1685987070 176.13.15.205 5834 typ srflx raddr 10.134.172.254 rport 58945 generation 0\r\n</span><br><span class="hljs-string">                a=candidate:2274372738 1 udp 1685987071 176.13.15.205 5840 typ srflx raddr 10.134.172.254 rport 58951 generation 0\r\n</span><br><span class="hljs-string">                a=ice-ufrag:g8lHDtPwH7m5xRex\r\n</span><br><span class="hljs-string">                a=ice-pwd:Q6jcBJNTWAyu0JTuIaQAeNI3\r\n</span><br><span class="hljs-string">                a=fingerprint:sha-256 0F:A1:68:51:87:3E:B4:C1:0D:33:97:40:78:22:2A:8C:D2:B6:46:23:F5:99:C9:88:5D:34:DB:E2:C5:94:B3:DD\r\n</span><br><span class="hljs-string">                a=setup:actpass\r\n</span><br><span class="hljs-string">                a=mid:audio\r\n</span><br><span class="hljs-string">                a=extmap:1 urn:ietf:params:rtp-hdrext:ssrc-audio-level\r\n</span><br><span class="hljs-string">                a=extmap:3 http:\/\/www.webrtc.org\/experiments\/rtp-hdrext\/abs-send-time\r\n</span><br><span class="hljs-string">                a=recvonly\r\n</span><br><span class="hljs-string">                a=rtcp-mux\r\n</span><br><span class="hljs-string">                a=rtpmap:111 opus\/48000\/2\r\n</span><br><span class="hljs-string">                a=fmtp:111 minptime=10; useinbandfec=1\r\n</span><br><span class="hljs-string">                a=rtpmap:103 ISAC\/16000\r\n</span><br><span class="hljs-string">                a=rtpmap:104 ISAC\/32000\r\n</span><br><span class="hljs-string">                a=rtpmap:9 G722\/8000\r\n</span><br><span class="hljs-string">                a=rtpmap:102 ILBC\/8000\r\n</span><br><span class="hljs-string">                a=rtpmap:0 PCMU\/8000\r\n</span><br><span class="hljs-string">                a=rtpmap:8 PCMA\/8000\r\n</span><br><span class="hljs-string">                a=rtpmap:106 CN\/32000\r\n</span><br><span class="hljs-string">                a=rtpmap:105 CN\/16000\r\n</span><br><span class="hljs-string">                a=rtpmap:13 CN\/8000\r\n</span><br><span class="hljs-string">                a=rtpmap:127 red\/8000\r\n</span><br><span class="hljs-string">                a=rtpmap:126 telephone-event\/8000\r\n</span><br><span class="hljs-string">                a=maxptime:60\r\n</span><br><span class="hljs-string">                m=video 61966 UDP\/TLS\/RTP\/SAVPF 100 101 116 117 96\r\n</span><br><span class="hljs-string">                c=IN IP4 82.166.93.197\r\n</span><br><span class="hljs-string">                a=rtcp:63816 IN IP4 82.166.93.197\r\n</span><br><span class="hljs-string">                a=candidate:3168280865 1 udp 2122260223 11.0.0.244 61966 typ host generation 0\r\n</span><br><span class="hljs-string">                a=candidate:1260196625 1 udp 2122194687 10.134.172.254 50435 typ host generation 0\r\n</span><br><span class="hljs-string">                a=candidate:3168280865 2 udp 2122260222 11.0.0.244 63816 typ host generation 0\r\n</span><br><span class="hljs-string">                a=candidate:1260196625 2 udp 2122194686 10.134.172.254 63396 typ host generation 0\r\n</span><br><span class="hljs-string">                a=candidate:4066106833 1 tcp 1518280447 11.0.0.244 60566 typ host tcptype passive generation 0\r\n</span><br><span class="hljs-string">                a=candidate:94302177 1 tcp 1518214911 10.134.172.254 60567 typ host tcptype passive generation 0\r\n</span><br><span class="hljs-string">                a=candidate:4066106833 2 tcp 1518280446 11.0.0.244 60568 typ host tcptype passive generation 0\r\n</span><br><span class="hljs-string">                a=candidate:94302177 2 tcp 1518214910 10.134.172.254 60569 typ host tcptype passive generation 0\r\n</span><br><span class="hljs-string">                a=candidate:1610196941 1 udp 1686052607 82.166.93.197 61966 typ srflx raddr 11.0.0.244 rport 61966 generation 0\r\n</span><br><span class="hljs-string">                a=candidate:1610196941 2 udp 1686052606 82.166.93.197 63816 typ srflx raddr 11.0.0.244 rport 63816 generation 0\r\n</span><br><span class="hljs-string">                a=candidate:2274372738 1 udp 1685987071 176.13.15.205 5879 typ srflx raddr 10.134.172.254 rport 50435 generation 0\r\n</span><br><span class="hljs-string">                a=candidate:2274372738 2 udp 1685987070 176.13.15.205 5860 typ srflx raddr 10.134.172.254 rport 63396 generation 0\r\n</span><br><span class="hljs-string">                a=ice-ufrag:g8lHDtPwH7m5xRex\r\n</span><br><span class="hljs-string">                a=ice-pwd:Q6jcBJNTWAyu0JTuIaQAeNI3\r\n</span><br><span class="hljs-string">                a=fingerprint:sha-256 0F:A1:68:51:87:3E:B4:C1:0D:33:97:40:78:22:2A:8C:D2:B6:46:23:F5:99:C9:88:5D:34:DB:E2:C5:94:B3:DD\r\n</span><br><span class="hljs-string">                a=setup:actpass\r\n</span><br><span class="hljs-string">                a=mid:video\r\n</span><br><span class="hljs-string">                a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\r\n</span><br><span class="hljs-string">                a=extmap:3 http:\/\/www.webrtc.org\/experiments\/rtp-hdrext\/abs-send-time\r\n</span><br><span class="hljs-string">                a=extmap:4 urn:3gpp:video-orientation\r\n</span><br><span class="hljs-string">                a=recvonly\r\n</span><br><span class="hljs-string">                a=rtcp-mux\r\n</span><br><span class="hljs-string">                a=rtpmap:100 VP8\/90000\r\n</span><br><span class="hljs-string">                a=rtcp-fb:100 ccm fir\r\n</span><br><span class="hljs-string">                a=rtcp-fb:100 nack\r\n</span><br><span class="hljs-string">                a=rtcp-fb:100 nack pli\r\n</span><br><span class="hljs-string">                a=rtcp-fb:100 goog-remb\r\n</span><br><span class="hljs-string">                a=rtcp-fb:100 transport-cc\r\n</span><br><span class="hljs-string">                a=rtpmap:101 VP9\/90000\r\n</span><br><span class="hljs-string">                a=rtcp-fb:101 ccm fir\r\n</span><br><span class="hljs-string">                a=rtcp-fb:101 nack\r\n</span><br><span class="hljs-string">                a=rtcp-fb:101 nack pli\r\n</span><br><span class="hljs-string">                a=rtcp-fb:101 goog-remb\r\n</span><br><span class="hljs-string">                a=rtcp-fb:101 transport-cc\r\n</span><br><span class="hljs-string">                a=rtpmap:116 red\/90000\r\n</span><br><span class="hljs-string">                a=rtpmap:117 ulpfec\/90000\r\n</span><br><span class="hljs-string">                a=rtpmap:96 rtx\/90000\r\n</span><br><span class="hljs-string">                a=fmtp:96 apt=100\r\n</span><br><span class="hljs-string">                "</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="发起呼叫信令响应"><a href="#发起呼叫信令响应" class="headerlink" title="发起呼叫信令响应"></a>发起呼叫信令响应</h4><figure class="hljs highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">"jsonrpc"</span>: <span class="hljs-string">"2.0"</span>,<br>    <span class="hljs-attr">"id"</span>: <span class="hljs-number">2</span>,<br>    <span class="hljs-attr">"result"</span>: &#123;<br>        <span class="hljs-attr">"message"</span>: <span class="hljs-string">"CALL CREATED"</span>,<br>        <span class="hljs-attr">"callID"</span>: <span class="hljs-string">"0CD433FC-A909-4DF2-BC46-0A4A94E9B800"</span>,<br>        <span class="hljs-attr">"sessid"</span>: <span class="hljs-string">"53FB0781-B586-4CDA-98C6-558680663B46"</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h4 id="会议被邀请信令"><a href="#会议被邀请信令" class="headerlink" title="会议被邀请信令"></a>会议被邀请信令</h4><figure class="hljs highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">"jsonrpc"</span>: <span class="hljs-string">"2.0"</span>,<br>    <span class="hljs-attr">"method"</span>: <span class="hljs-string">"verto.media"</span>,<br>    <span class="hljs-attr">"id"</span>: <span class="hljs-number">637</span>,<br>    <span class="hljs-attr">"params"</span>: &#123;<br>        <span class="hljs-attr">"sdp"</span>: <span class="hljs-string">"v=0\n</span><br><span class="hljs-string">                o=FreeSWITCH 1457232832 1457232833 IN IP4 159.203.164.7\n</span><br><span class="hljs-string">                s=FreeSWITCH\n</span><br><span class="hljs-string">                c=IN IP4 159.203.164.7\n</span><br><span class="hljs-string">                t=0 0\n</span><br><span class="hljs-string">                a=msid-semantic: WMS TcxpBqoS0j04fOIzkIArKYrlV7LCs9Ub\n</span><br><span class="hljs-string">                m=audio 30784 UDP/TLS/RTP/SAVPF 111 126\n</span><br><span class="hljs-string">                a=rtpmap:111 opus/48000/2\n</span><br><span class="hljs-string">                a=fmtp:111 useinbandfec=1; minptime=10\n</span><br><span class="hljs-string">                a=rtpmap:126 telephone-event/8000\n</span><br><span class="hljs-string">                a=silenceSupp:off - - - -\n</span><br><span class="hljs-string">                a=ptime:20\n</span><br><span class="hljs-string">                a=sendonly\n</span><br><span class="hljs-string">                a=fingerprint:sha-256 FE:CD:54:3E:2A:D7:DB:00:57:B7:D4:55:A8:EB:79:08:16:BB:B0:EA:43:44:42:9A:90:01:49:37:7B:31:48:F8\n</span><br><span class="hljs-string">                a=setup:active\n</span><br><span class="hljs-string">                a=rtcp-mux\n</span><br><span class="hljs-string">                a=rtcp:30784 IN IP4 159.203.164.7\n</span><br><span class="hljs-string">                a=ice-ufrag:qLh1zzclxONPNyQO\n</span><br><span class="hljs-string">                a=ice-pwd:G7g4Drkist37beYsP5jfvlqS\n</span><br><span class="hljs-string">                a=candidate:9922185636 1 udp 659136 159.203.164.7 30784 typ host generation 0\n</span><br><span class="hljs-string">                a=ssrc:1323504502 cname:bhqCyFkpPbjUPSk0\n</span><br><span class="hljs-string">                a=ssrc:1323504502 msid:TcxpBqoS0j04fOIzkIArKYrlV7LCs9Ub a0\n</span><br><span class="hljs-string">                a=ssrc:1323504502 mslabel:TcxpBqoS0j04fOIzkIArKYrlV7LCs9Ub\n</span><br><span class="hljs-string">                a=ssrc:1323504502 label:TcxpBqoS0j04fOIzkIArKYrlV7LCs9Uba0\n</span><br><span class="hljs-string">                m=video 31380 UDP/TLS/RTP/SAVPF 100\n</span><br><span class="hljs-string">                a=rtpmap:100 VP8/90000\n</span><br><span class="hljs-string">                a=sendonly\n</span><br><span class="hljs-string">                a=fingerprint:sha-256 FE:CD:54:3E:2A:D7:DB:00:57:B7:D4:55:A8:EB:79:08:16:BB:B0:EA:43:44:42:9A:90:01:49:37:7B:31:48:F8\n</span><br><span class="hljs-string">                a=setup:active\n</span><br><span class="hljs-string">                a=rtcp-mux\n</span><br><span class="hljs-string">                a=rtcp:31380 IN IP4 159.203.164.7\n</span><br><span class="hljs-string">                b=AS:1024\n</span><br><span class="hljs-string">                a=rtcp-fb:100 ccm fir\n</span><br><span class="hljs-string">                a=rtcp-fb:100 nack\n</span><br><span class="hljs-string">                a=rtcp-fb:100 nack pli\n</span><br><span class="hljs-string">                a=ssrc:594893571 cname:bhqCyFkpPbjUPSk0\n</span><br><span class="hljs-string">                a=ssrc:594893571 msid:TcxpBqoS0j04fOIzkIArKYrlV7LCs9Ub v0\n</span><br><span class="hljs-string">                a=ssrc:594893571 mslabel:TcxpBqoS0j04fOIzkIArKYrlV7LCs9Ub\n</span><br><span class="hljs-string">                a=ssrc:594893571 label:TcxpBqoS0j04fOIzkIArKYrlV7LCs9Ubv0\n</span><br><span class="hljs-string">                a=ice-ufrag:2KDK4wDMYuAuVdAZ\n</span><br><span class="hljs-string">                a=ice-pwd:YTpxObqpLuBEfig7TKHN6bqU\n</span><br><span class="hljs-string">                a=candidate:7508673635 1 udp 659136 159.203.164.7 31380 typ host generation 0\n</span><br><span class="hljs-string">                "</span>,<br>        <span class="hljs-attr">"callID"</span>: <span class="hljs-string">"0CD433FC-A909-4DF2-BC46-0A4A94E9B800"</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="会议被邀请信令响应"><a href="#会议被邀请信令响应" class="headerlink" title="会议被邀请信令响应"></a>会议被邀请信令响应</h4><figure class="hljs highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">"jsonrpc"</span>: <span class="hljs-string">"2.0"</span>,<br>    <span class="hljs-attr">"method"</span>: <span class="hljs-string">"verto.answer"</span>,<br>    <span class="hljs-attr">"id"</span>: <span class="hljs-number">638</span>,<br>    <span class="hljs-attr">"params"</span>: &#123;<br>        <span class="hljs-attr">"callID"</span>: <span class="hljs-string">"0CD433FC-A909-4DF2-BC46-0A4A94E9B800"</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开源软交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开源软交换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FreeSWITCH模块类型</title>
      <link href="/2020/04/29/FreeSWITCH%E6%A8%A1%E5%9D%97%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/04/29/FreeSWITCH%E6%A8%A1%E5%9D%97%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="FreeSWITCH模块类型"><a href="#FreeSWITCH模块类型" class="headerlink" title="FreeSWITCH模块类型"></a>FreeSWITCH模块类型</h2><p>　　FreeSWITCH的内核特别稳定，而外部模块的接口也相当稳定，所以为我们开发自己的模块打下了良好的基础。在设计之初，Anthony Minessale 将外部模块分为13种类型，每种类型代表不同的应用方向，并且也设计了稳定的plugin接口。</p><p>FreeSWTICH的接口类型：</p><ul><li>SWITCH_ENDPOINT_INTERFACE /* endpoint modules, 主要实现各种通信协议，如SIP、H.232、Skype、XMPP等等*/</li><li>SWITCH_TIMER_INTERFACE /* 时钟接口，包括软时钟和硬时钟，FreeSWITCH自带一个soft timer */</li><li>SWITCH_DIALPLAN_INTERFACE /* dialplan modules, 用来控制呼叫流程的，比如在XML中编写流程的控制，或者自己定义一种文本语法，然后编写一个dialplan module用来解析这种流程控制的语法 */</li><li>SWITCH_CODEC_INTERFACE /* 编码模块，包括 G.722、G.729等，也可以实现自定义的编码格式 */</li><li>SWITCH_APPLICATION_INTERFACE /* 应用模块，这种模块一般是用户定义的功能，比如说ASR的接入，那么就可以写一个APP，在dialplan中使用 */</li><li>SWITCH_API_INTERFACE /* API一般是在FreeSWITCH的shell中使用的，但是也可以通过特定方式在dialplan中使用，类似于APP modules */</li><li>SWITCH_FILE_INTERFACE /* 文件操作模块，文件格式或文件操作相关的api, 通过指令操作媒体服务本机的文件 */</li><li>SWITCH_SPEECH_INTERFACE /* TTS 模块，调用TTS引擎的API实现语音合成的功能，用户可以直接在dialplan中使用，比如将微软的SAPI实现TTS功能 */</li><li>SWITCH_DIRECTORY_INTERFACE /* 模块操作模块，暂时还没分析这个接口 */</li><li>SWITCH_CHAT_INTERFACE /* IM模块，可以用来做一对一或一对多的聊天或对话窗口 */</li><li>SWITCH_SAY_INTERFACE /* 提示音多语言支持模块，FreeSWTICH有一些内置的提示音，一个say module实现一种语音的提示音播放，比如说mod_say_zh就是使用中文播放 “元”、”角”、“分”，而mod_say_en就是英文播放”dollar“、”cent“等 */</li><li>SWITCH_ASR_INTERFACE /* ASR模块，调用语音识别引擎API实现语音识别 */</li><li>SWITCH_MANAGEMENT_INTERFACE /* 暂时还没有分析这个接口 */</li></ul><p>　　上面这些接口，有的比较简单，比如TTS的，SAY模块（大部分常用的都内置了，无需再开发），Dialplan模块，也有部分比较复杂，比如Endpoint和ASR这两个就教复杂一些。还有一些我还没有分析到，所以不太清楚其复杂程度，等写到对应的模块再说吧。</p><p>　　其实说白了，C/C++的plugin/module framework无非就是函数指针，那么FreeSWITCH的module接口也是大量的使用了函数指针，以达到用户实现功能模块，FreeSWITCH Core负责调度的原则。</p><p>　　基本上会按照上面标志的顺序对FreeSWITCH的模块开发做一些简单的分析，然后再说一下开发中应该注意的地方（如果我做过对应模块），最后可能写一些简单的示例。</p>]]></content>
      
      
      <categories>
          
          <category> 开源软交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开源软交换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FreeSWITH源码编译</title>
      <link href="/2020/04/17/FreeSWITH%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/"/>
      <url>/2020/04/17/FreeSWITH%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/</url>
      
        <content type="html"><![CDATA[<h1 id="源代码导读及编译指南"><a href="#源代码导读及编译指南" class="headerlink" title="源代码导读及编译指南"></a>源代码导读及编译指南</h1><p>好多朋友在讨论如何阅读源代码时，感觉最大的困扰并不是看不懂代码，而是不知道从哪里下手，就好像是老虎吃天——无从下口。是的，FreeSWITCH的源代码太长了，确实好像从哪里看好像都找不到源头。不过，也不要因此而望而却步。在看比较大型的项目时，尤其是对着不熟悉的功能和代码，总要经过这么一个过程。尤其是，有些朋友，在对FreeSWITCH本身还不熟悉的时候，就试图通过阅读源代码来了解系统的功能。个人认为那是本末倒置的方法，不可取。笔者一直坚持，要想阅读FreeSWITCH的源代码，先要阅读官方文档、如果感觉英文太难读，国内也有不少这方面的书籍，如：老杜的《FreeSWITCH权威指南》,老李也写过不少这方面的文章和电子书，自己多做实验，掌握了FreeSWITCH的基本功能，再来阅读源代码会容易入手一些。</p><p>当然，阅读源代码不仅仅是为了满足我们的好奇心——哪些功能是怎么实现的、系统还有何种没有公开（写到文档里）的功能等。更重要的是，如果我们熟悉了源代码，我们就可以修改它——不管是修复BUG、增加功能并为开源项目做贡献，还是修改源代码以适合你自己的需要，这些都能给你带来很好的成就感。</p><p>接下来，我们从准备源代码环境开始，由浅入深地进一步一步进入FreeSWITCH内部的神秘世界。</p><h2 id="准备FreeSWITH源代码环境"><a href="#准备FreeSWITH源代码环境" class="headerlink" title="准备FreeSWITH源代码环境"></a>准备FreeSWITH源代码环境</h2><p>首先，Clone FreeSWITCH源代码：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://freeswitch.org/stash/scm/fs/freeswitch.git<br></code></pre></td></tr></table></figure><p>要查看源代码，最好选择一个具有语法高亮功能的阅读器或编辑器。作者在一直使用的是比较厚重的Visual Studio不过它只能运行在Win下，也有其它跨平台的工具比如SublimeText，只不过它只有语法高亮，函数之前的依赖及跳转基本没有，当然也可以使用一些经典工具，如在UNIX类系统上使用vi/vim或Emacs。</p><h2 id="FreeSWITCH源代码目录结构"><a href="#FreeSWITCH源代码目录结构" class="headerlink" title="FreeSWITCH源代码目录结构"></a>FreeSWITCH源代码目录结构</h2><p>FreeSWITCH的源代码目录中，<code>src</code>目录中包含了绝大部分的源代码；<code>libs</code>目录下是一些第三方的库和模块，如<code>libs/sofia-sip</code>就是Nokia的SIP库。</p><p>在<code>src</code>目录中，<code>include</code>目录存放了系统大部分的头文件；不同模块的代码则分门别类的放到<code>mod</code>目录中不同的子目录中。系统的核心代码则直接在<code>src</code>目录中。</p><p>FreeSWITCH模块的源代码（<code>mod</code>目录）结构如下表所示：</p><p>目录             说明</p><hr><p><code>asr_tts</code>          语音识别及合成相关模块<br><code>dialplans</code>        Dialplan模块<br><code>endpoints</code>        Endpoint模块，如<code>mod_sofia</code><br><code>formats</code>          文件格式模块，如<code>mod_sndfile</code><br><code>loggers</code>          日志模块<br><code>sdk</code>              一些例子和宏<br><code>xml_int</code>          XML相关的模块<br><code>applications</code>     提供各种应用功能的模块，如<code>mod_dptools</code>和<code>mod_commands</code><br><code>directories</code>      LDAP<br><code>event_handlers</code>   事件处理模块<br><code>languages</code>        嵌入式语言模块<br><code>say</code>              不同语种的语言模块<br><code>timers</code>           时钟和定时器模块</p><p>上面不同的分类也与FreeSWITCH内部模块的抽象大致对应，但也有例外的情况，典型地，一些模块可能有多个接口（Interface）实现，这样的模块会根据其主要功能放到对应的目录中，有时就直接放到<code>applications</code>目录中，相当于该目录中有一些多功能的模块。但随着时间的推移，某些单功能的模块也可能会被增加一些新的功能和接口（Interface），变成多功能模块。</p><h2 id="FreeSWITCH源代码的编译"><a href="#FreeSWITCH源代码的编译" class="headerlink" title="FreeSWITCH源代码的编译"></a>FreeSWITCH源代码的编译</h2><p>关于FreeSWITCH的编译，我们主要以在Linux系统上的编译为例。Windows平台上一般很少用来做服务部署和执行，暂时略过。</p><h3 id="首次编译"><a href="#首次编译" class="headerlink" title="首次编译"></a>首次编译</h3><p>在编译源代码前，请确保按第3章中所讲的安装相关的依赖库及开发包。FreeSWITCH在开发中使用经典的<code>gcc</code>、<code>Makefile</code>及<code>automake</code>、<code>autoconf</code>等GNU工具链，因而在各种平台上都很容易地进行编译。</p><p>为了方便不了解这些GNU工具的读者，我们在此也顺便简单讲一下。</p><p>首先，大家知道，FreeSWITCH主要是用C和C++写的。编译C语言的程序一般需要<code>gcc</code>，如，如下命令会编译<code>test.c</code>并生成一个可以执行的二进制程序：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gcc test.c -o <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><p>当源代码数量过多时，一行一行的执行<code>gcc</code>就比较累了。因此，可以编写简单的Shell脚本或Makefile实现。Makefile是<code>make</code>工具使用的文件，它除了定义源文件到目标文件的编译方法外，还能定义这些文件的依赖关系。通过检查这些依赖关系，如果在下次编译时源文件没有修改过，则可以不用重复编译，因而可以大大加快编译速度。</p><p>不同平台上的工具链是不一样的，在Linux等开源平台上一般使用<code>gcc</code>，而在其他商业的UNIX系统上往往都有各厂商自己的编译工具链，因而一种称为<code>automake</code>的工具出现了。通过编写<code>configure</code>脚本，定义一些宏，可以在编译前自动检测当前的平台环境和工具链，以生成适当的Makefile。</p><p>当工程更大的时候，写<code>configure</code>脚本也是很累人的活，因而又有人发明了<code>autoconf</code>，通过定义更简单的宏，可以自动生成<code>configure</code>脚本。</p><p>总之，大家可以结合FreeSWITCH的编译过程深入理解一下。</p><p>首先，如果你是从Git仓库中Clone的源代码，需要先执行一下<code>bootstrap.sh</code>。它会初始化一些文件。</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./bootstrap.sh<br></code></pre></td></tr></table></figure><p>如果是直接下载的源代码Tar包，则不需要这一步，因为源代码在<code>tar</code>之前就已经执行过该步骤了。</p><p>接下来，执行<code>configure</code>，它会生成<code>Makefile</code>：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure<br></code></pre></td></tr></table></figure><p><code>configure</code>有很多参数，其中比较常用的是<code>prefix</code>参数，用于将FreeSWITCH安装到指定的目录下（FreeSWITCH默认的安装目录是<code>/usr/local/freeswitch</code>），如：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure --prefix=/usr/<span class="hljs-built_in">local</span>/freeswitch2<br>./configure --prefix=/opt/freeswitch<br></code></pre></td></tr></table></figure><p><code>configure</code>执行完毕后，将产生<code>Makefile</code>，以及一个<code>modules.conf</code>文件。<code>modules.conf</code>用于控制在编译阶段要自动编译哪些模块。如果你需要这些模块，则可以编辑该文件，并去掉前面的”<code>#</code>“号注释，如：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ head modules.conf<br><span class="hljs-comment">#applications/mod_abstraction</span><br><span class="hljs-comment">#applications/mod_avmd</span><br><span class="hljs-comment">#applications/mod_blacklist</span><br><span class="hljs-comment">#applications/mod_callcenter</span><br><span class="hljs-comment">#applications/mod_cidlookup</span><br>applications/mod_cluechoo<br>applications/mod_commands<br>applications/mod_conference<br><span class="hljs-comment">#applications/mod_curl</span><br>applications/mod_db<br></code></pre></td></tr></table></figure><p>如果不知道哪些模块是干什么的，可以暂且不管这个文件。到以后也可以再单独编译某些模块。</p><p>接下来，执行<code>make</code>，它将根据<code>Makefile</code>进行编译</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">make<br></code></pre></td></tr></table></figure><p>编译成功后，执行如下命令将程序安装到相应的位置。</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">make install<br></code></pre></td></tr></table></figure><p>注意，需要确认要安装的目标位置有写入的权限，如果这些命令都是以<code>root</code>执行的，那你不会遇到权限的问题，但如果你是以普通用户执行的，就可能遇到权限的问题。所以，如果有权限的问题，可以尝试用<code>root</code>进行安装：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo make install<br></code></pre></td></tr></table></figure><p>或者，也可以通过如下方案以普通用户的身份安装，如，以<code>freeswitch</code>用户安装，假设你现在登录的用户就是<code>freeswitc</code>h：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo mkdir /usr/<span class="hljs-built_in">local</span>/freeswitch               <span class="hljs-comment"># 用root身份创建目录</span><br>sudo chown freeswitch /usr/<span class="hljs-built_in">local</span>/freeswitch    <span class="hljs-comment"># 把目录的属主改为freeswitch</span><br>make install                                   <span class="hljs-comment"># 用freeswitch普通用户身份安装即可</span><br></code></pre></td></tr></table></figure><h3 id="增量编译"><a href="#增量编译" class="headerlink" title="增量编译"></a>增量编译</h3><p>有时候，我们修改了源文件，需要再次编译。在没有修改<code>autoconf</code>、<code>automake</code>相关的编译规则的话，直接执行<code>make</code>就行了：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">make<br></code></pre></td></tr></table></figure><p>或者，也可以直接执行</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">make install<br></code></pre></td></tr></table></figure><p><code>make</code>会检查全部的规则，并决定哪些需要重新编译，这还是比较耗时的。如果你知识你仅仅修改了哪些模块的话，可以直接编译该模块，如：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">make mod_sofia<br>make mod_sofia-install<br></code></pre></td></tr></table></figure><p>使用这种方法也可以编译默认没有编译过的模块，如<code>mod_shout</code>模块提供mp3录、放音的支持，它默认是不被编译的，可以用以下命令安装：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">make mod_shout-install<br></code></pre></td></tr></table></figure><p>当然，在大多数情况下，你也可以直接进入相关的模块目录下，执行<code>make</code>。如：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> src/mod/endpoints/mod_sofia<br>make install<br></code></pre></td></tr></table></figure><p>如果你改了核心的代码，则可以执行</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">make core-install<br></code></pre></td></tr></table></figure><h3 id="常见问题及最佳实践"><a href="#常见问题及最佳实践" class="headerlink" title="常见问题及最佳实践"></a>常见问题及最佳实践</h3><p>如果在编译过程中出现某个或某些模块编译不通过的情况，可以先在<code>modules.conf</code>中将该模块注释掉，等全部的编译通过后，再单独检查该模块有什么问题。</p><p>如果跟作者一样，你经常在不同的分支中切来切去，则如果分支差异比较大时编译系统中的目标文件可能会乱掉。这是可能是编译规则设置的问题，但FreeSWITCH项目太大了，因而，作者经常在不同的目录中编译，如，下列命令编译最新的master版本到默认位置：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://freeswitch.org/stash/scm/fs/freeswitch.git freeswitch-master<br><span class="hljs-built_in">cd</span> freeswitch-master<br>./bootstrap.sh &amp;&amp; ./configure &amp;&amp; make &amp;&amp; make install<br></code></pre></td></tr></table></figure><p>编译1.10.1版本并安装到<code>/usr/local/freeswitch-1.10.1</code>：</p><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://freeswitch.org/stash/scm/fs/freeswitch.git freeswitch-1.10.1<br><span class="hljs-built_in">cd</span> freeswitch-1.10.1<br>git checkout v1.10.1.stable<br>./bootstrap.sh &amp;&amp; ./configure --prefix=/usr/<span class="hljs-built_in">local</span>/freeswitch-1.10.1<br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><p>通过这种方式，以后在维护多个分支时就不会混乱了，而且，如果有必要的话，也可以同时在一台主机上同时启动不同版本的FreeSWITCH实例。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>我们主要讲了如何获取及编译FreeSWITCH代码，这样大家就可以在阅读源代码的同时尝试改一些地方（至少，可以在某些关于的地方加一些日志输出的语句），并编译执行看一下效果。阅读永远是枯燥乏味的，只有配合一定的实践，让代码“动”起来，才会有意思。</p>]]></content>
      
      
      <categories>
          
          <category> 开源软交换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开源软交换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github上的第一次写作</title>
      <link href="/2020/04/14/github%E4%B8%8A%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%86%99%E4%BD%9C/"/>
      <url>/2020/04/14/github%E4%B8%8A%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%86%99%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>开启一个全新的旅程, GO!</p><h1 id="大标题"><a href="#大标题" class="headerlink" title="大标题"></a>大标题</h1><p>test</p><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>test</p><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p>test</p>]]></content>
      
      
      <categories>
          
          <category> 写作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 写作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/04/12/hello-world/"/>
      <url>/2020/04/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p>在通信领域深耕<strong>10余年</strong>…</p><p><strong>精通</strong>C/C++/Java/Go/lua/py等编程语言;</p><p><strong>精通</strong>各类运营商协议如：SIP/T1/E1/PRI/H.323/SMGP/CMPP/SGIP/CNGP等;</p><p><strong>精通</strong>开源通信框架如：FreeSWITCH/Asterisk/Kamailio/OpenSIPS/WebRTC/JsSIP的配置使用及模块扩展及源码修改;</p><p><strong>掌握</strong>VoIP领域的音视频编解码，压缩算法，PLC，FEC，NACK等丢包补偿技术，ICE技术，QoS技术等;</p><p><strong>掌握</strong>主流模拟及数字中继网关配置接入;</p><p><strong>掌握</strong>主流微服务，存储引擎、搜索引擎、分布式、并行计算等框架;</p><p>曾从事<strong>IM核心系统</strong>、<strong>消息推送平台</strong>、<strong>VoIP媒体交换平台</strong>、<strong>公有云呼叫中心平台</strong>、<strong>SaaS化商业服务平台</strong>…</p><p>任何问题可随时交流：<br>QQ: 34298166<br>Mail: <a href="mailto:yangxianjun@gmail.com">yangxianjun@gmail.com</a></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
